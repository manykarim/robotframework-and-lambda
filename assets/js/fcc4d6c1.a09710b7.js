"use strict";(self.webpackChunkrobotframework_and_lambda=self.webpackChunkrobotframework_and_lambda||[]).push([[379],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(a),d=n,f=c["".concat(p,".").concat(d)]||c[d]||u[d]||o;return a?r.createElement(f,i(i({ref:t},m),{},{components:a})):r.createElement(f,i({ref:t},m))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1055:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=a(7462),n=(a(7294),a(3905));const o={},i="Robot Framework on AWS Lambda",l={unversionedId:"getting-started/project",id:"getting-started/project",title:"Robot Framework on AWS Lambda",description:"I will explain the setup of a Robot Framework project on AWS Lambda using an existing project.",source:"@site/docs/getting-started/project.mdx",sourceDirName:"getting-started",slug:"/getting-started/project",permalink:"/robotframework-and-lambda/docs/getting-started/project",draft:!1,editUrl:"https://manykarim.github.io/robotframework-and-lambda/docs/getting-started/project.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/robotframework-and-lambda/docs/getting-started/install"}},p={},s=[{value:"Project Structure",id:"project-structure",level:2},{value:"template.yaml",id:"templateyaml",level:2}],m={toc:s};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"robot-framework-on-aws-lambda"},"Robot Framework on AWS Lambda"),(0,n.kt)("p",null,"I will explain the setup of a Robot Framework project on AWS Lambda using an existing project.",(0,n.kt)("br",{parentName:"p"}),"\n","It is parallel test execution project that splits up your test cases into multiple Lambda functions and executes them in parallel."),(0,n.kt)("p",null,"It will use multiple AWS Ressources:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://aws.amazon.com/lambda/"},"AWS Lambda")," to execute Robot Framework tests and use its API"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://aws.amazon.com/s3/"},"AWS S3")," to store the test cases and the test results"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://aws.amazon.com/dynamodb/"},"AWS DynamoDB")," to store the run status"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://aws.amazon.com/sqs/"},"AWS SQS")," to communicate between the Lambda functions"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://aws.amazon.com/cloudformation/"},"AWS CloudFormation")," to create the AWS Ressources")),(0,n.kt)("p",null,"You can find the sample project ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/manykarim/rf-lambda-executor"},"here")," and you can clone it with the command below:  "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/manykarim/rf-lambda-executor\n")),(0,n.kt)("p",null,"It will be featured at ",(0,n.kt)("a",{parentName:"p",href:"https://robocon.io/"},"RoboCon 2023")," in the my talk ",(0,n.kt)("a",{parentName:"p",href:"https://robocon.io/#to-infinity-and-beyond---serverless-scaling-with-aws-lambda"},"To Infinity and Beyond - Serverless scaling with AWS Lambda"),"."),(0,n.kt)("h2",{id:"project-structure"},"Project Structure"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u251c\u2500\u2500 distributor\n\u2502\xa0\xa0 \u251c\u2500\u2500 app.py\n\u2502\xa0\xa0 \u251c\u2500\u2500 __init__.py\n\u2502\xa0\xa0 \u251c\u2500\u2500 Listener\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 DistributorListener.py\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 __init__.py\n\u2502\xa0\xa0 \u2514\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 executor\n\u2502\xa0\xa0 \u251c\u2500\u2500 app.py\n\u2502\xa0\xa0 \u251c\u2500\u2500 Dockerfile\n\u2502\xa0\xa0 \u251c\u2500\u2500 __init__.py\n\u2502\xa0\xa0 \u2514\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 merger\n\u2502\xa0\xa0 \u251c\u2500\u2500 app.py\n\u2502\xa0\xa0 \u251c\u2500\u2500 __init__.py\n\u2502\xa0\xa0 \u2514\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 poetry.lock\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 samconfig.toml\n\u2514\u2500\u2500 template.yaml\n")),(0,n.kt)("p",null,"The most important parts are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the ",(0,n.kt)("inlineCode",{parentName:"li"},"distributor")," , ",(0,n.kt)("inlineCode",{parentName:"li"},"executor")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"merger")," folders which contain the Lambda functions"),(0,n.kt)("li",{parentName:"ul"},"the ",(0,n.kt)("inlineCode",{parentName:"li"},"template.yaml")," file which contains the CloudFormation stack")),(0,n.kt)("h2",{id:"templateyaml"},"template.yaml"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"template.yaml")," file is the main file for the CloudFormation stack. It contains all the AWS Ressources that will be created and the Lambda functions that will be deployed.",(0,n.kt)("br",{parentName:"p"}),"\n","It is a YAML file using the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification.html"},"SAM Specification"),"."))}c.isMDXComponent=!0}}]);