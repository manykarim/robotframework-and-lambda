"use strict";(self.webpackChunkrobotframework_and_lambda=self.webpackChunkrobotframework_and_lambda||[]).push([[556],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(a),m=l,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(h,r(r({ref:t},c),{},{components:a})):n.createElement(h,r({ref:t},c))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=a.length,r=new Array(o);r[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:l,r[1]=i;for(var s=2;s<o;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1112:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=a(7462),l=(a(7294),a(3905));const o={},r="Installation",i={unversionedId:"getting-started/install",id:"getting-started/install",title:"Installation",description:"Install AWS CLI and SAM CLI",source:"@site/docs/getting-started/install.mdx",sourceDirName:"getting-started",slug:"/getting-started/install",permalink:"/robotframework-and-lambda/docs/getting-started/install",draft:!1,editUrl:"https://manykarim.github.io/robotframework-and-lambda/docs/getting-started/install.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/robotframework-and-lambda/docs/intro"},next:{title:"RF Lambda Executor",permalink:"/robotframework-and-lambda/docs/getting-started/project"}},p={},s=[{value:"Install AWS CLI and SAM CLI",id:"install-aws-cli-and-sam-cli",level:2},{value:"Deploy Hello World application",id:"deploy-hello-world-application",level:2},{value:"Create a new application",id:"create-a-new-application",level:3},{value:"Build and test the application",id:"build-and-test-the-application",level:3},{value:"Deploy the application",id:"deploy-the-application",level:3},{value:"Test the application",id:"test-the-application",level:3}],c={toc:s};function d(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"installation"},"Installation"),(0,l.kt)("h2",{id:"install-aws-cli-and-sam-cli"},"Install AWS CLI and SAM CLI"),(0,l.kt)("p",null,"Install the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html"},"AWS CLI")," and ",(0,l.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html"},"SAM CLI")," on your local machine."),(0,l.kt)("p",null,"Refer to the following links for more information:\n",(0,l.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started.html"},"Getting started with SAM")),(0,l.kt)("p",null,"To complete the next steps, I assume that you have the following prerequisites:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"An AWS account"),(0,l.kt)("li",{parentName:"ul"},"Configured AWS Identity and Access Management (IAM) permissions"),(0,l.kt)("li",{parentName:"ul"},"Configured AWS credentials on your local machine"),(0,l.kt)("li",{parentName:"ul"},"Docker installed and running on your local machine (to test locally and build your Lambda function's deployment package)"),(0,l.kt)("li",{parentName:"ul"},"Homebrew installed on your local machine (macOS and Linux only)"),(0,l.kt)("li",{parentName:"ul"},"AWS SAM CLI installed on your local machine")),(0,l.kt)("h2",{id:"deploy-hello-world-application"},"Deploy Hello World application"),(0,l.kt)("p",null,"You can use the AWM SAM CLI to create, build, and deploy a simple Hello World application."),(0,l.kt)("h3",{id:"create-a-new-application"},"Create a new application"),(0,l.kt)("p",null,"Create a new application in a new directory."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sam init\n")),(0,l.kt)("p",null,"The SAM CLI command above will prompt you with the following options:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Which template source would you like to use?\n        1 - AWS Quick Start Templates\n        2 - Custom Template Location\n")),(0,l.kt)("p",null,"Choose 1 and press Enter."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Choose an AWS Quick Start application template\n        1 - Hello World Example\n        2 - Multi-step workflow\n        3 - Serverless API\n        4 - Scheduled task\n        5 - Standalone function\n        6 - Data processing\n        7 - Infrastructure event management\n        8 - Serverless Connector Hello World Example\n        9 - Multi-step workflow with Connectors\n        10 - Lambda EFS example\n        11 - Machine Learning\n")),(0,l.kt)("p",null,"Choose 1 and press Enter."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Use the most popular runtime and package type? (Python and zip) [y/N]: y\n\nWould you like to enable X-Ray tracing on the function(s) in your application?  [y/N]: N\n\nProject name [sam-app]: hello-lambda\n")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Enter ",(0,l.kt)("inlineCode",{parentName:"li"},"y")," to select ",(0,l.kt)("inlineCode",{parentName:"li"},"Python")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"zip")," as the most popular runtime and package type.  "),(0,l.kt)("li",{parentName:"ol"},"Enter ",(0,l.kt)("inlineCode",{parentName:"li"},"N")," to disable X-Ray tracing.  "),(0,l.kt)("li",{parentName:"ol"},"Enter ",(0,l.kt)("inlineCode",{parentName:"li"},"hello-lambda")," as the project name.")),(0,l.kt)("h3",{id:"build-and-test-the-application"},"Build and test the application"),(0,l.kt)("p",null,"Build the application."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd hello-lambda\nsam build\n")),(0,l.kt)("h3",{id:"deploy-the-application"},"Deploy the application"),(0,l.kt)("p",null,"Deploy the application."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sam deploy --guided\n")),(0,l.kt)("h3",{id:"test-the-application"},"Test the application"),(0,l.kt)("p",null,"Test the application using the invoke command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sam local invoke HelloWorldFunction --event events/event.json\n")))}d.isMDXComponent=!0}}]);