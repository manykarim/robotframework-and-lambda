"use strict";(self.webpackChunkrobotframework_and_lambda=self.webpackChunkrobotframework_and_lambda||[]).push([[404],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(k,l(l({ref:t},s),{},{components:n})):a.createElement(k,l({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8569:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2},l="Build, Deploy and Run",i={unversionedId:"rf-lambda-executor/build-and-run",id:"rf-lambda-executor/build-and-run",title:"Build, Deploy and Run",description:"Prerequisites",source:"@site/docs/rf-lambda-executor/build-and-run.mdx",sourceDirName:"rf-lambda-executor",slug:"/rf-lambda-executor/build-and-run",permalink:"/robotframework-and-lambda/docs/rf-lambda-executor/build-and-run",draft:!1,editUrl:"https://manykarim.github.io/robotframework-and-lambda/docs/rf-lambda-executor/build-and-run.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/robotframework-and-lambda/docs/rf-lambda-executor/overview"}},p={},u=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Build",id:"build",level:3},{value:"Deploy",id:"deploy",level:3},{value:"Run",id:"run",level:2},{value:"Upload Test Cases",id:"upload-test-cases",level:3},{value:"From AWS Console",id:"from-aws-console",level:4},{value:"From AWS CLI",id:"from-aws-cli",level:4},{value:"Test Run from API Gateway Console",id:"test-run-from-api-gateway-console",level:3},{value:"A real run via an HTTP Endpoint",id:"a-real-run-via-an-http-endpoint",level:3},{value:"Add API Key and Usage Plan via API Gateway Console",id:"add-api-key-and-usage-plan-via-api-gateway-console",level:4},{value:"Run with curl",id:"run-with-curl",level:4},{value:"Run with Postman",id:"run-with-postman",level:4},{value:"Cleanup",id:"cleanup",level:2}],s={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"build-deploy-and-run"},"Build, Deploy and Run"),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://aws.amazon.com/cli/"},"AWS CLI")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html"},"SAM CLI")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker"))),(0,r.kt)("h3",{id:"build"},"Build"),(0,r.kt)("p",null,"You can build the Lambda Functions using the command "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sam build\n")),(0,r.kt)("p",null,"It will create "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a ",(0,r.kt)("inlineCode",{parentName:"li"},".zip package")," for the ",(0,r.kt)("inlineCode",{parentName:"li"},"distributor")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"merger")," function"),(0,r.kt)("li",{parentName:"ul"},"a ",(0,r.kt)("inlineCode",{parentName:"li"},"Dockerimage")," for the ",(0,r.kt)("inlineCode",{parentName:"li"},"executor")," function")),(0,r.kt)("p",null,"Check out the ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"executor/")," folder and the ",(0,r.kt)("inlineCode",{parentName:"p"},"requirements.txt")," file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"distributor/")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"merger/")," folder for more details about the ",(0,r.kt)("strong",{parentName:"p"},"dependencies"),"."),(0,r.kt)("h3",{id:"deploy"},"Deploy"),(0,r.kt)("p",null,"To deploy your Lambda Function using CloudFormation, use the command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sam deploy --guided\n")),(0,r.kt)("p",null,"It will run a wizard and ask for a final confirmation before deployment.",(0,r.kt)("br",{parentName:"p"}),"\n","CloudFormation will ",(0,r.kt)("strong",{parentName:"p"},"keep track")," of your already deployed resources and will only ",(0,r.kt)("strong",{parentName:"p"},"re-deploy the changes"),"."),(0,r.kt)("h2",{id:"run"},"Run"),(0,r.kt)("p",null,"Before you can run the tests you need to ",(0,r.kt)("strong",{parentName:"p"},"upload the test cases")," to the S3 Bucket ",(0,r.kt)("inlineCode",{parentName:"p"},"Testsbucket"),"."),(0,r.kt)("p",null,"You can do this with the AWS Console or with the AWS CLI."),(0,r.kt)("p",null,"The Folder structure in the S3 Bucket ",(0,r.kt)("inlineCode",{parentName:"p"},"Testsbucket")," shall look like that:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},".\n\u251c\u2500\u2500 <project-name>\n\u2502\xa0\xa0 \u251c\u2500\u2500 tests\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 <TestSuiteA>.robot\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 <TestSuiteb>.robot\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 ...\n\u2502\xa0\xa0 \u2514\u2500\u2500 resources\n\u2502\xa0\xa0  \xa0\xa0 \u251c\u2500\u2500 <ResourceA>.resource\n\u2502\xa0\xa0  \xa0\xa0 \u251c\u2500\u2500 <ResourceB>.resource\n\u2502\xa0\xa0  \xa0\xa0 \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 <another-project>\n \xa0\xa0 \u251c\u2500\u2500 tests\n \xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 ...\n \xa0\xa0 \u2514\u2500\u2500 ...\n")),(0,r.kt)("p",null,"Multiple ",(0,r.kt)("strong",{parentName:"p"},"Test Projects")," (including ",(0,r.kt)("inlineCode",{parentName:"p"},"Test Suites")," inside a ",(0,r.kt)("inlineCode",{parentName:"p"},"tests/")," folder) can be stored on a single ",(0,r.kt)("inlineCode",{parentName:"p"},"Testsbucket"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Distributor")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Executor")," will download only the required ",(0,r.kt)("inlineCode",{parentName:"p"},"project")," folder (which is passed in the body of a ",(0,r.kt)("strong",{parentName:"p"},"http post request"),")."),(0,r.kt)("h3",{id:"upload-test-cases"},"Upload Test Cases"),(0,r.kt)("h4",{id:"from-aws-console"},"From AWS Console"),(0,r.kt)("p",null,"Either open the ",(0,r.kt)("a",{parentName:"p",href:"https://aws.amazon.com/"},"AWS Console")," landing page and navigate to ",(0,r.kt)("inlineCode",{parentName:"p"},"S3"),".",(0,r.kt)("br",{parentName:"p"}),"\n","Or open the ",(0,r.kt)("a",{parentName:"p",href:"https://s3.console.aws.amazon.com"},"S3 Console")," page directly.  "),(0,r.kt)("p",null,"Select your ",(0,r.kt)("inlineCode",{parentName:"p"},"Testsbucket")," from the list of S3 Buckets.",(0,r.kt)("br",{parentName:"p"}),"\n","You can either create the folders for your project manually or upload complete folders via the web page."),(0,r.kt)("h4",{id:"from-aws-cli"},"From AWS CLI"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"aws")," can copy singe files or complete folders recursively.",(0,r.kt)("br",{parentName:"p"}),"\n","To copy a folder ",(0,r.kt)("inlineCode",{parentName:"p"},"tests/")," from your local filesystem to the S3 Bucket you can user the command below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"aws s3 cp --recursive tests/ s3://<testbucket-name>/<project>/tests\n")),(0,r.kt)("h3",{id:"test-run-from-api-gateway-console"},"Test Run from API Gateway Console"),(0,r.kt)("h3",{id:"a-real-run-via-an-http-endpoint"},"A real run via an HTTP Endpoint"),(0,r.kt)("p",null,"Before you can use the HTTP Endpoint, you need to set up an ",(0,r.kt)("inlineCode",{parentName:"p"},"API Key")," and assign it to a ",(0,r.kt)("inlineCode",{parentName:"p"},"Usage Plan")," and a ",(0,r.kt)("inlineCode",{parentName:"p"},"Stage"),"."),(0,r.kt)("p",null,"When triggering your Lambda Function via the HTTP Endpoint, you need to provide the ",(0,r.kt)("inlineCode",{parentName:"p"},"API Key")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Header")," for authentication."),(0,r.kt)("p",null,"The reason is, that the API Endpoint will be available to the public and should require some authentication.",(0,r.kt)("br",{parentName:"p"}),"\n","Beside ",(0,r.kt)("inlineCode",{parentName:"p"},"API Keys")," there are also other ways of authentication.  "),(0,r.kt)("h4",{id:"add-api-key-and-usage-plan-via-api-gateway-console"},"Add API Key and Usage Plan via API Gateway Console"),(0,r.kt)("h4",{id:"run-with-curl"},"Run with curl"),(0,r.kt)("h4",{id:"run-with-postman"},"Run with Postman"),(0,r.kt)("h2",{id:"cleanup"},"Cleanup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"aws cloudformation delete-stack --stack-name rf-lambda-executor\n")))}d.isMDXComponent=!0}}]);